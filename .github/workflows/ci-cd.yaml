name: Build & Publish Docker Images

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & build frontend assets
        working-directory: frontend
        run: |
          npm ci
          npm run build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push frontend image
        uses: docker/build-push-action@v4
        with:
          context: frontend
          file: frontend/Dockerfile.prod
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

      - name: Build & push backend image
        uses: docker/build-push-action@v4
        with:
          context: backend
          file: backend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest

      - name: Build & push database image
        uses: docker/build-push-action@v4
        with:
          context: database
          file: database/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/database:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/database:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Pull built images
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/database:${{ github.sha }}

      - name: Set up Kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.20.0

      - name: Load images into Kind
        run: |
          kind load docker-image ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}
          kind load docker-image ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}
          kind load docker-image ${{ secrets.DOCKERHUB_USERNAME }}/database:${{ github.sha }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/database-configmap.yml
          kubectl apply -f k8s/database-deployment.yaml
          kubectl apply -f k8s/database-service.yaml
          kubectl apply -f k8s/backend-configmap.yaml
          kubectl apply -f k8s/backend-secret.yaml
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-service.yaml
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl apply -f k8s/frontend-service.yaml
